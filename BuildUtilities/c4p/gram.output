Terminals unused in grammar

   IN
   NIL
   SET
   WITH
   PASCAL_KEYWORD
   TYPE_IDENTIFIER
   FIELD_IDENTIFIER
   C_RESERVED
   CONSTANT_IDENTIFIER
   FUNCTION_IDENTIFIER
   PROCEDURE_IDENTIFIER
   UNDEFINED_IDENTIFIER
   VARIABLE_IDENTIFIER
   PARAMETER_IDENTIFIER
   BUILD_IN_IDENTIFIER


State 385 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_heading ';' program_block '.'

    2 $@1: %empty

    3 program_heading: PROGRAM IDENTIFIER $@1 optional_program_parameters

    4 optional_program_parameters: %empty
    5                            | '(' program_parameter_list ')'

    6 $@2: %empty

    7 $@3: %empty

    8 $@4: %empty

    9 $@5: %empty

   10 $@6: %empty

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part

   12 program_parameter_list: program_parameter
   13                       | program_parameter_list ',' program_parameter

   14 program_parameter: IDENTIFIER

   15 procedure_and_function_declaration_part: %empty
   16                                        | procedure_and_function_declarations

   17 procedure_and_function_declarations: procedure_or_function_declaration
   18                                    | procedure_and_function_declarations procedure_or_function_declaration

   19 procedure_or_function_declaration: procedure_declaration
   20                                  | function_declaration

   21 function_declaration: function_head ';' FORWARD ';'

   22 $@7: %empty

   23 $@8: %empty

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END ';'

   25 function_head: FUNCTION IDENTIFIER
   26              | FUNCTION IDENTIFIER optional_formal_parameter_section_list ':' IDENTIFIER

   27 optional_formal_parameter_section_list: %empty

   28 $@9: %empty

   29 optional_formal_parameter_section_list: '(' $@9 formal_parameter_section_list ')'

   30 procedure_declaration: procedure_head ';' FORWARD ';'

   31 $@10: %empty

   32 $@11: %empty

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END ';'

   34 procedure_head: PROCEDURE IDENTIFIER optional_formal_parameter_section_list

   35 formal_parameter_section_list: formal_parameter_section

   36 @12: %empty

   37 formal_parameter_section_list: formal_parameter_section_list ';' @12 formal_parameter_section

   38 $@13: %empty

   39 formal_parameter_section: $@13 parameter_group

   40 $@14: %empty

   41 formal_parameter_section: VAR $@14 parameter_group

   42 parameter_group: parameter_declarator_list ':' IDENTIFIER

   43 parameter_declarator_list: parameter_declarator

   44 @15: %empty

   45 parameter_declarator_list: parameter_declarator_list ',' @15 parameter_declarator

   46 parameter_declarator: IDENTIFIER

   47 label_declaration_part: %empty
   48                       | LABEL label_list ';'

   49 label_list: UNSIGNED_NUMBER
   50           | label_list ',' UNSIGNED_NUMBER

   51 constant_definition_part: %empty
   52                         | CONST constant_definitions

   53 constant_definitions: constant_definition
   54                     | constant_definitions constant_definition

   55 $@16: %empty

   56 constant_definition: IDENTIFIER '=' $@16 constant ';'

   57 constant: REAL_CONSTANT
   58         | '+' REAL_CONSTANT
   59         | '-' REAL_CONSTANT
   60         | LONG_REAL_CONSTANT
   61         | '+' LONG_REAL_CONSTANT
   62         | '-' LONG_REAL_CONSTANT
   63         | UNSIGNED_NUMBER
   64         | '+' UNSIGNED_NUMBER
   65         | '-' UNSIGNED_NUMBER
   66         | IDENTIFIER
   67         | '+' IDENTIFIER
   68         | '-' IDENTIFIER
   69         | CHARACTER_STRING
   70         | CHARACTER_CONSTANT

   71 bound: UNSIGNED_NUMBER
   72      | '+' UNSIGNED_NUMBER
   73      | '-' UNSIGNED_NUMBER
   74      | IDENTIFIER
   75      | '+' IDENTIFIER
   76      | '-' IDENTIFIER
   77      | CHARACTER_CONSTANT

   78 type_definition_part: %empty
   79                     | TYPE type_definitions

   80 type_definitions: type_definition
   81                 | type_definitions type_definition

   82 $@17: %empty

   83 type_definition: IDENTIFIER '=' $@17 type_denoter ';'

   84 type_denoter: IDENTIFIER
   85             | type

   86 type: ordinal_type
   87     | structured_type
   88     | pointer_type

   89 ordinal_type: subrange_type

   90 subrange_type: bound DOTDOT bound

   91 structured_type: unpacked_structured_type
   92                | PACKED unpacked_structured_type

   93 unpacked_structured_type: array_type
   94                         | record_type
   95                         | file_type

   96 file_type: FILe OF component_type

   97 @18: %empty

   98 array_type: ARRAY '[' index_type_list ']' OF @18 component_type

   99 pointer_type: '^' component_type

  100 component_type: type_denoter

  101 index_type_list: index_type

  102 @19: %empty

  103 index_type_list: index_type_list ',' @19 index_type

  104 index_type: bound DOTDOT bound
  105           | IDENTIFIER

  106 record_type: RECORD field_list END

  107 field_list: fixed_part variant_part

  108 fixed_part: record_section_list

  109 record_section_list: record_section

  110 @20: %empty

  111 record_section_list: record_section_list ';' @20 record_section

  112 record_section: %empty
  113               | field_declarator_list ':' type_denoter

  114 field_declarator_list: field_declarator

  115 @21: %empty

  116 field_declarator_list: field_declarator_list ',' @21 field_declarator

  117 field_declarator: IDENTIFIER

  118 variant_part: %empty
  119             | CASE variant_selector OF variant_list

  120 variant_selector: tag_type

  121 tag_type: IDENTIFIER

  122 variant_list: variant

  123 @22: %empty

  124 variant_list: variant_list ';' @22 variant

  125 variant: %empty

  126 $@23: %empty

  127 $@24: %empty

  128 variant: $@23 case_constant_list ':' '(' $@24 variant_field_list ')'

  129 variant_field_list: fixed_part variant_part

  130 variable_declaration_part: %empty
  131                          | VAR variable_declarations

  132 variable_declarations: variable_declaration
  133                      | variable_declarations variable_declaration

  134 variable_declaration: variable_declarator_list ':' type_denoter ';'

  135 variable_declarator_list: variable_declarator

  136 @25: %empty

  137 variable_declarator_list: variable_declarator_list ',' @25 variable_declarator

  138 variable_declarator: IDENTIFIER

  139 statement_part: compound_statement

  140 $@26: %empty

  141 compound_statement: BEGIn $@26 statement_sequence END

  142 statement_sequence: statement
  143                   | statement_sequence ';' statement

  144 $@27: %empty

  145 statement: optional_label $@27 simple_statement
  146          | optional_label structured_statement

  147 optional_label: %empty
  148               | label

  149 label: UNSIGNED_NUMBER ':'

  150 simple_statement: %empty
  151                 | assignment_statement
  152                 | procedure_statement
  153                 | goto_statement

  154 $@28: %empty

  155 procedure_statement: READ $@28 read_parameter_list

  156 $@29: %empty

  157 procedure_statement: READLN $@29 readln_parameter_list

  158 $@30: %empty

  159 procedure_statement: WRITE $@30 write_parameter_list

  160 $@31: %empty

  161 procedure_statement: WRITELN $@31 writeln_parameter_list

  162 $@32: %empty

  163 procedure_statement: IDENTIFIER $@32 optional_actual_parameter_list

  164 readln_parameter_list: %empty
  165                      | read_parameter_list

  166 $@33: %empty

  167 read_parameter_list: '(' $@33 read_parameter_list1 ')'

  168 read_parameter_list1: read_parameter

  169 $@34: %empty

  170 read_parameter_list1: read_parameter_list1 ',' $@34 read_parameter

  171 read_parameter: variable_access

  172 writeln_parameter_list: %empty
  173                       | write_parameter_list

  174 $@35: %empty

  175 write_parameter_list: '(' $@35 write_parameter_list1 ')'

  176 write_parameter_list1: write_expression

  177 $@36: %empty

  178 write_parameter_list1: write_parameter_list1 ',' $@36 write_expression

  179 write_expression: expression

  180 $@37: %empty

  181 write_expression: expression ':' $@37 output_width

  182 output_width: expression

  183 $@38: %empty

  184 output_width: expression ':' $@38 expression

  185 structured_statement: compound_statement
  186                     | conditional_statement
  187                     | repetitive_statement

  188 conditional_statement: if_statement
  189                      | case_statement

  190 $@39: %empty

  191 $@40: %empty

  192 if_statement: IF $@39 boolean_expression THEN $@40 statement else_part

  193 else_part: %empty

  194 $@41: %empty

  195 else_part: ELSE $@41 statement

  196 $@42: %empty

  197 $@43: %empty

  198 case_statement: CASE $@42 case_index OF $@43 case_list_element_sequence optional_semicolon END

  199 optional_semicolon: %empty
  200                   | ';'

  201 case_index: expression

  202 case_list_element_sequence: case_list_element
  203                           | case_list_element_sequence ';' case_list_element

  204 $@44: %empty

  205 case_list_element: case_constant_list ':' $@44 statement

  206 case_constant_list: case_constant
  207                   | case_constant_list ',' case_constant

  208 $@45: %empty

  209 case_constant: $@45 constant
  210              | OTHERS

  211 repetitive_statement: repeat_statement
  212                     | while_statement
  213                     | for_statement

  214 $@46: %empty

  215 $@47: %empty

  216 while_statement: WHILE $@46 expression DO $@47 statement

  217 $@48: %empty

  218 $@49: %empty

  219 repeat_statement: REPEAT $@48 statement_sequence UNTIL $@49 expression

  220 $@50: %empty

  221 $@51: %empty

  222 $@52: %empty

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value to_or_downto $@51 final_value DO $@52 statement

  224 initial_value: expression

  225 final_value: expression

  226 to_or_downto: TO
  227             | DOWNTO

  228 $@53: %empty

  229 $@54: %empty

  230 assignment_statement: variable_access $@53 assign $@54 expression

  231 goto_statement: GOTO UNSIGNED_NUMBER

  232 assign: ASSIGN

  233 variable_access: entire_variable
  234                | component_variable
  235                | buffer_variable

  236 buffer_variable: variable_access '^'

  237 entire_variable: variable_identifier

  238 variable_identifier: IDENTIFIER

  239 component_variable: indexed_variable
  240                   | field_designator

  241 @55: %empty

  242 indexed_variable: array_variable '[' @55 index_expression_list ']'

  243 array_variable: variable_access

  244 field_designator: record_variable '.' IDENTIFIER

  245 record_variable: variable_access

  246 index_expression_list: expression

  247 $@56: %empty

  248 index_expression_list: index_expression_list ',' $@56 expression

  249 expression: simple_expression

  250 @57: %empty

  251 expression: expression relational_operator @57 simple_expression

  252 boolean_expression: expression

  253 relational_operator: '<'
  254                    | '>'
  255                    | LEQ
  256                    | GEQ
  257                    | '='
  258                    | NEQ

  259 simple_expression: term

  260 $@58: %empty

  261 simple_expression: '-' $@58 term
  262                  | '+' term

  263 @59: %empty

  264 simple_expression: simple_expression adding_operator @59 term

  265 $@60: %empty

  266 simple_expression: simple_expression OR $@60 term

  267 adding_operator: '-'
  268                | '+'

  269 term: factor

  270 $@61: %empty

  271 term: term '/' $@61 factor

  272 @62: %empty

  273 term: term multiplying_operator @62 factor

  274 $@63: %empty

  275 term: term AND $@63 factor

  276 multiplying_operator: '*'
  277                     | DIV
  278                     | MOD

  279 factor: UNSIGNED_NUMBER
  280       | REAL_CONSTANT
  281       | LONG_REAL_CONSTANT
  282       | CHARACTER_STRING
  283       | CHARACTER_CONSTANT
  284       | variable_access

  285 $@64: %empty

  286 factor: IDENTIFIER '(' $@64 actual_parameter_list ')'

  287 $@65: %empty

  288 factor: '(' $@65 expression ')'

  289 $@66: %empty

  290 factor: NOT $@66 factor

  291 optional_actual_parameter_list: %empty
  292                               | '(' actual_parameter_list ')'

  293 actual_parameter_list: actual_parameter

  294 $@67: %empty

  295 actual_parameter_list: actual_parameter_list ',' $@67 actual_parameter

  296 actual_parameter: expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 29 128 167 175 286 288 292
')' (41) 5 29 128 167 175 286 288 292
'*' (42) 276
'+' (43) 58 61 64 67 72 75 262 268
',' (44) 13 45 50 103 116 137 170 178 207 248 295
'-' (45) 59 62 65 68 73 76 261 267
'.' (46) 1 244
'/' (47) 271
':' (58) 26 42 113 128 134 149 181 184 205
';' (59) 1 21 24 30 33 37 48 56 83 111 124 134 143 200 203
'<' (60) 253
'=' (61) 56 83 257
'>' (62) 254
'[' (91) 98 242
']' (93) 98 242
'^' (94) 99 236
error (256)
AND (258) 275
ARRAY (259) 98
BEGIn (260) 24 33 141
CASE (261) 119 198
CONST (262) 52
DIV (263) 277
DO (264) 216 223
DOWNTO (265) 227
ELSE (266) 195
END (267) 24 33 106 141 198
FILe (268) 96
FOR (269) 223
FORWARD (270) 21 30
FUNCTION (271) 25 26
GOTO (272) 231
IF (273) 192
IN (274)
LABEL (275) 48
MOD (276) 278
NIL (277)
NOT (278) 290
OF (279) 96 98 119 198
OR (280) 266
PACKED (281) 92
PROCEDURE (282) 34
PROGRAM (283) 3
RECORD (284) 106
REPEAT (285) 219
SET (286)
THEN (287) 192
TO (288) 226
TYPE (289) 79
UNTIL (290) 219
VAR (291) 41 131
WHILE (292) 216
WITH (293)
OTHERS (294) 210
DOTDOT (295) 90 104
NEQ (296) 258
GEQ (297) 256
LEQ (298) 255
ASSIGN (299) 223 232
PASCAL_KEYWORD (300)
TYPE_IDENTIFIER (301)
FIELD_IDENTIFIER (302)
C_RESERVED (303)
CONSTANT_IDENTIFIER (304)
FUNCTION_IDENTIFIER (305)
PROCEDURE_IDENTIFIER (306)
UNDEFINED_IDENTIFIER (307)
VARIABLE_IDENTIFIER (308)
PARAMETER_IDENTIFIER (309)
READ (310) 155
READLN (311) 157
WRITE (312) 159
WRITELN (313) 161
BUILD_IN_IDENTIFIER (314)
CHARACTER_STRING (315) 69 282
CHARACTER_CONSTANT (316) 70 77 283
UNSIGNED_NUMBER (317) 49 50 63 64 65 71 72 73 149 231 279
REAL_CONSTANT (318) 57 58 59 280
LONG_REAL_CONSTANT (319) 60 61 62 281
IDENTIFIER (320) 3 14 25 26 34 42 46 56 66 67 68 74 75 76 83 84 105
    117 121 138 163 223 238 244 286


Nonterminals, with rules where they appear

$accept (82)
    on left: 0
program (83)
    on left: 1, on right: 0
program_heading (84)
    on left: 3, on right: 1
$@1 (85)
    on left: 2, on right: 3
optional_program_parameters (86)
    on left: 4 5, on right: 3
program_block (87)
    on left: 11, on right: 1
$@2 (88)
    on left: 6, on right: 11
$@3 (89)
    on left: 7, on right: 11
$@4 (90)
    on left: 8, on right: 11
$@5 (91)
    on left: 9, on right: 11
$@6 (92)
    on left: 10, on right: 11
program_parameter_list (93)
    on left: 12 13, on right: 5 13
program_parameter (94)
    on left: 14, on right: 12 13
procedure_and_function_declaration_part (95)
    on left: 15 16, on right: 11
procedure_and_function_declarations (96)
    on left: 17 18, on right: 16 18
procedure_or_function_declaration (97)
    on left: 19 20, on right: 17 18
function_declaration (98)
    on left: 21 24, on right: 20
$@7 (99)
    on left: 22, on right: 24
$@8 (100)
    on left: 23, on right: 24
function_head (101)
    on left: 25 26, on right: 21 24
optional_formal_parameter_section_list (102)
    on left: 27 29, on right: 26 34
$@9 (103)
    on left: 28, on right: 29
procedure_declaration (104)
    on left: 30 33, on right: 19
$@10 (105)
    on left: 31, on right: 33
$@11 (106)
    on left: 32, on right: 33
procedure_head (107)
    on left: 34, on right: 30 33
formal_parameter_section_list (108)
    on left: 35 37, on right: 29 37
@12 (109)
    on left: 36, on right: 37
formal_parameter_section (110)
    on left: 39 41, on right: 35 37
$@13 (111)
    on left: 38, on right: 39
$@14 (112)
    on left: 40, on right: 41
parameter_group (113)
    on left: 42, on right: 39 41
parameter_declarator_list (114)
    on left: 43 45, on right: 42 45
@15 (115)
    on left: 44, on right: 45
parameter_declarator (116)
    on left: 46, on right: 43 45
label_declaration_part (117)
    on left: 47 48, on right: 11 24 33
label_list (118)
    on left: 49 50, on right: 48 50
constant_definition_part (119)
    on left: 51 52, on right: 11 24 33
constant_definitions (120)
    on left: 53 54, on right: 52 54
constant_definition (121)
    on left: 56, on right: 53 54
$@16 (122)
    on left: 55, on right: 56
constant (123)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 56
    209
bound (124)
    on left: 71 72 73 74 75 76 77, on right: 90 104
type_definition_part (125)
    on left: 78 79, on right: 11 24 33
type_definitions (126)
    on left: 80 81, on right: 79 81
type_definition (127)
    on left: 83, on right: 80 81
$@17 (128)
    on left: 82, on right: 83
type_denoter (129)
    on left: 84 85, on right: 83 100 113 134
type (130)
    on left: 86 87 88, on right: 85
ordinal_type (131)
    on left: 89, on right: 86
subrange_type (132)
    on left: 90, on right: 89
structured_type (133)
    on left: 91 92, on right: 87
unpacked_structured_type (134)
    on left: 93 94 95, on right: 91 92
file_type (135)
    on left: 96, on right: 95
array_type (136)
    on left: 98, on right: 93
@18 (137)
    on left: 97, on right: 98
pointer_type (138)
    on left: 99, on right: 88
component_type (139)
    on left: 100, on right: 96 98 99
index_type_list (140)
    on left: 101 103, on right: 98 103
@19 (141)
    on left: 102, on right: 103
index_type (142)
    on left: 104 105, on right: 101 103
record_type (143)
    on left: 106, on right: 94
field_list (144)
    on left: 107, on right: 106
fixed_part (145)
    on left: 108, on right: 107 129
record_section_list (146)
    on left: 109 111, on right: 108 111
@20 (147)
    on left: 110, on right: 111
record_section (148)
    on left: 112 113, on right: 109 111
field_declarator_list (149)
    on left: 114 116, on right: 113 116
@21 (150)
    on left: 115, on right: 116
field_declarator (151)
    on left: 117, on right: 114 116
variant_part (152)
    on left: 118 119, on right: 107 129
variant_selector (153)
    on left: 120, on right: 119
tag_type (154)
    on left: 121, on right: 120
variant_list (155)
    on left: 122 124, on right: 119 124
@22 (156)
    on left: 123, on right: 124
variant (157)
    on left: 125 128, on right: 122 124
$@23 (158)
    on left: 126, on right: 128
$@24 (159)
    on left: 127, on right: 128
variant_field_list (160)
    on left: 129, on right: 128
variable_declaration_part (161)
    on left: 130 131, on right: 11 24 33
variable_declarations (162)
    on left: 132 133, on right: 131 133
variable_declaration (163)
    on left: 134, on right: 132 133
variable_declarator_list (164)
    on left: 135 137, on right: 134 137
@25 (165)
    on left: 136, on right: 137
variable_declarator (166)
    on left: 138, on right: 135 137
statement_part (167)
    on left: 139, on right: 11
compound_statement (168)
    on left: 141, on right: 139 185
$@26 (169)
    on left: 140, on right: 141
statement_sequence (170)
    on left: 142 143, on right: 24 33 141 143 219
statement (171)
    on left: 145 146, on right: 142 143 192 195 205 216 223
$@27 (172)
    on left: 144, on right: 145
optional_label (173)
    on left: 147 148, on right: 145 146
label (174)
    on left: 149, on right: 148
simple_statement (175)
    on left: 150 151 152 153, on right: 145
procedure_statement (176)
    on left: 155 157 159 161 163, on right: 152
$@28 (177)
    on left: 154, on right: 155
$@29 (178)
    on left: 156, on right: 157
$@30 (179)
    on left: 158, on right: 159
$@31 (180)
    on left: 160, on right: 161
$@32 (181)
    on left: 162, on right: 163
readln_parameter_list (182)
    on left: 164 165, on right: 157
read_parameter_list (183)
    on left: 167, on right: 155 165
$@33 (184)
    on left: 166, on right: 167
read_parameter_list1 (185)
    on left: 168 170, on right: 167 170
$@34 (186)
    on left: 169, on right: 170
read_parameter (187)
    on left: 171, on right: 168 170
writeln_parameter_list (188)
    on left: 172 173, on right: 161
write_parameter_list (189)
    on left: 175, on right: 159 173
$@35 (190)
    on left: 174, on right: 175
write_parameter_list1 (191)
    on left: 176 178, on right: 175 178
$@36 (192)
    on left: 177, on right: 178
write_expression (193)
    on left: 179 181, on right: 176 178
$@37 (194)
    on left: 180, on right: 181
output_width (195)
    on left: 182 184, on right: 181
$@38 (196)
    on left: 183, on right: 184
structured_statement (197)
    on left: 185 186 187, on right: 146
conditional_statement (198)
    on left: 188 189, on right: 186
if_statement (199)
    on left: 192, on right: 188
$@39 (200)
    on left: 190, on right: 192
$@40 (201)
    on left: 191, on right: 192
else_part (202)
    on left: 193 195, on right: 192
$@41 (203)
    on left: 194, on right: 195
case_statement (204)
    on left: 198, on right: 189
$@42 (205)
    on left: 196, on right: 198
$@43 (206)
    on left: 197, on right: 198
optional_semicolon (207)
    on left: 199 200, on right: 198
case_index (208)
    on left: 201, on right: 198
case_list_element_sequence (209)
    on left: 202 203, on right: 198 203
case_list_element (210)
    on left: 205, on right: 202 203
$@44 (211)
    on left: 204, on right: 205
case_constant_list (212)
    on left: 206 207, on right: 128 205 207
case_constant (213)
    on left: 209 210, on right: 206 207
$@45 (214)
    on left: 208, on right: 209
repetitive_statement (215)
    on left: 211 212 213, on right: 187
while_statement (216)
    on left: 216, on right: 212
$@46 (217)
    on left: 214, on right: 216
$@47 (218)
    on left: 215, on right: 216
repeat_statement (219)
    on left: 219, on right: 211
$@48 (220)
    on left: 217, on right: 219
$@49 (221)
    on left: 218, on right: 219
for_statement (222)
    on left: 223, on right: 213
$@50 (223)
    on left: 220, on right: 223
$@51 (224)
    on left: 221, on right: 223
$@52 (225)
    on left: 222, on right: 223
initial_value (226)
    on left: 224, on right: 223
final_value (227)
    on left: 225, on right: 223
to_or_downto (228)
    on left: 226 227, on right: 223
assignment_statement (229)
    on left: 230, on right: 151
$@53 (230)
    on left: 228, on right: 230
$@54 (231)
    on left: 229, on right: 230
goto_statement (232)
    on left: 231, on right: 153
assign (233)
    on left: 232, on right: 230
variable_access (234)
    on left: 233 234 235, on right: 171 230 236 243 245 284
buffer_variable (235)
    on left: 236, on right: 235
entire_variable (236)
    on left: 237, on right: 233
variable_identifier (237)
    on left: 238, on right: 237
component_variable (238)
    on left: 239 240, on right: 234
indexed_variable (239)
    on left: 242, on right: 239
@55 (240)
    on left: 241, on right: 242
array_variable (241)
    on left: 243, on right: 242
field_designator (242)
    on left: 244, on right: 240
record_variable (243)
    on left: 245, on right: 244
index_expression_list (244)
    on left: 246 248, on right: 242 248
$@56 (245)
    on left: 247, on right: 248
expression (246)
    on left: 249 251, on right: 179 181 182 184 201 216 219 224 225
    230 246 248 251 252 288 296
@57 (247)
    on left: 250, on right: 251
boolean_expression (248)
    on left: 252, on right: 192
relational_operator (249)
    on left: 253 254 255 256 257 258, on right: 251
simple_expression (250)
    on left: 259 261 262 264 266, on right: 249 251 264 266
$@58 (251)
    on left: 260, on right: 261
@59 (252)
    on left: 263, on right: 264
$@60 (253)
    on left: 265, on right: 266
adding_operator (254)
    on left: 267 268, on right: 264
term (255)
    on left: 269 271 273 275, on right: 259 261 262 264 266 271 273
    275
$@61 (256)
    on left: 270, on right: 271
@62 (257)
    on left: 272, on right: 273
$@63 (258)
    on left: 274, on right: 275
multiplying_operator (259)
    on left: 276 277 278, on right: 273
factor (260)
    on left: 279 280 281 282 283 284 286 288 290, on right: 269 271
    273 275 290
$@64 (261)
    on left: 285, on right: 286
$@65 (262)
    on left: 287, on right: 288
$@66 (263)
    on left: 289, on right: 290
optional_actual_parameter_list (264)
    on left: 291 292, on right: 163
actual_parameter_list (265)
    on left: 293 295, on right: 286 292 295
$@67 (266)
    on left: 294, on right: 295
actual_parameter (267)
    on left: 296, on right: 293 295


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program          go to state 2
    program_heading  go to state 3


State 1

    3 program_heading: PROGRAM . IDENTIFIER $@1 optional_program_parameters

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_heading . ';' program_block '.'

    ';'  shift, and go to state 6


State 4

    3 program_heading: PROGRAM IDENTIFIER . $@1 optional_program_parameters

    $default  reduce using rule 2 ($@1)

    $@1  go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: program_heading ';' . program_block '.'

    $default  reduce using rule 6 ($@2)

    program_block  go to state 8
    $@2            go to state 9


State 7

    3 program_heading: PROGRAM IDENTIFIER $@1 . optional_program_parameters

    '('  shift, and go to state 10

    $default  reduce using rule 4 (optional_program_parameters)

    optional_program_parameters  go to state 11


State 8

    1 program: program_heading ';' program_block . '.'

    '.'  shift, and go to state 12


State 9

   11 program_block: $@2 . label_declaration_part $@3 constant_definition_part $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part

    LABEL  shift, and go to state 13

    $default  reduce using rule 47 (label_declaration_part)

    label_declaration_part  go to state 14


State 10

    5 optional_program_parameters: '(' . program_parameter_list ')'

    IDENTIFIER  shift, and go to state 15

    program_parameter_list  go to state 16
    program_parameter       go to state 17


State 11

    3 program_heading: PROGRAM IDENTIFIER $@1 optional_program_parameters .

    $default  reduce using rule 3 (program_heading)


State 12

    1 program: program_heading ';' program_block '.' .

    $default  reduce using rule 1 (program)


State 13

   48 label_declaration_part: LABEL . label_list ';'

    UNSIGNED_NUMBER  shift, and go to state 18

    label_list  go to state 19


State 14

   11 program_block: $@2 label_declaration_part . $@3 constant_definition_part $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part

    $default  reduce using rule 7 ($@3)

    $@3  go to state 20


State 15

   14 program_parameter: IDENTIFIER .

    $default  reduce using rule 14 (program_parameter)


State 16

    5 optional_program_parameters: '(' program_parameter_list . ')'
   13 program_parameter_list: program_parameter_list . ',' program_parameter

    ')'  shift, and go to state 21
    ','  shift, and go to state 22


State 17

   12 program_parameter_list: program_parameter .

    $default  reduce using rule 12 (program_parameter_list)


State 18

   49 label_list: UNSIGNED_NUMBER .

    $default  reduce using rule 49 (label_list)


State 19

   48 label_declaration_part: LABEL label_list . ';'
   50 label_list: label_list . ',' UNSIGNED_NUMBER

    ';'  shift, and go to state 23
    ','  shift, and go to state 24


State 20

   11 program_block: $@2 label_declaration_part $@3 . constant_definition_part $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part

    CONST  shift, and go to state 25

    $default  reduce using rule 51 (constant_definition_part)

    constant_definition_part  go to state 26


State 21

    5 optional_program_parameters: '(' program_parameter_list ')' .

    $default  reduce using rule 5 (optional_program_parameters)


State 22

   13 program_parameter_list: program_parameter_list ',' . program_parameter

    IDENTIFIER  shift, and go to state 15

    program_parameter  go to state 27


State 23

   48 label_declaration_part: LABEL label_list ';' .

    $default  reduce using rule 48 (label_declaration_part)


State 24

   50 label_list: label_list ',' . UNSIGNED_NUMBER

    UNSIGNED_NUMBER  shift, and go to state 28


State 25

   52 constant_definition_part: CONST . constant_definitions

    IDENTIFIER  shift, and go to state 29

    constant_definitions  go to state 30
    constant_definition   go to state 31


State 26

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part . $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part

    $default  reduce using rule 8 ($@4)

    $@4  go to state 32


State 27

   13 program_parameter_list: program_parameter_list ',' program_parameter .

    $default  reduce using rule 13 (program_parameter_list)


State 28

   50 label_list: label_list ',' UNSIGNED_NUMBER .

    $default  reduce using rule 50 (label_list)


State 29

   56 constant_definition: IDENTIFIER . '=' $@16 constant ';'

    '='  shift, and go to state 33


State 30

   52 constant_definition_part: CONST constant_definitions .
   54 constant_definitions: constant_definitions . constant_definition

    IDENTIFIER  shift, and go to state 29

    $default  reduce using rule 52 (constant_definition_part)

    constant_definition  go to state 34


State 31

   53 constant_definitions: constant_definition .

    $default  reduce using rule 53 (constant_definitions)


State 32

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 . type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part

    TYPE  shift, and go to state 35

    $default  reduce using rule 78 (type_definition_part)

    type_definition_part  go to state 36


State 33

   56 constant_definition: IDENTIFIER '=' . $@16 constant ';'

    $default  reduce using rule 55 ($@16)

    $@16  go to state 37


State 34

   54 constant_definitions: constant_definitions constant_definition .

    $default  reduce using rule 54 (constant_definitions)


State 35

   79 type_definition_part: TYPE . type_definitions

    IDENTIFIER  shift, and go to state 38

    type_definitions  go to state 39
    type_definition   go to state 40


State 36

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 type_definition_part . variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part

    VAR  shift, and go to state 41

    $default  reduce using rule 130 (variable_declaration_part)

    variable_declaration_part  go to state 42


State 37

   56 constant_definition: IDENTIFIER '=' $@16 . constant ';'

    CHARACTER_STRING    shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44
    UNSIGNED_NUMBER     shift, and go to state 45
    REAL_CONSTANT       shift, and go to state 46
    LONG_REAL_CONSTANT  shift, and go to state 47
    IDENTIFIER          shift, and go to state 48
    '+'                 shift, and go to state 49
    '-'                 shift, and go to state 50

    constant  go to state 51


State 38

   83 type_definition: IDENTIFIER . '=' $@17 type_denoter ';'

    '='  shift, and go to state 52


State 39

   79 type_definition_part: TYPE type_definitions .
   81 type_definitions: type_definitions . type_definition

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 79 (type_definition_part)

    type_definition  go to state 53


State 40

   80 type_definitions: type_definition .

    $default  reduce using rule 80 (type_definitions)


State 41

  131 variable_declaration_part: VAR . variable_declarations

    IDENTIFIER  shift, and go to state 54

    variable_declarations     go to state 55
    variable_declaration      go to state 56
    variable_declarator_list  go to state 57
    variable_declarator       go to state 58


State 42

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 type_definition_part variable_declaration_part . $@5 procedure_and_function_declaration_part $@6 statement_part

    $default  reduce using rule 9 ($@5)

    $@5  go to state 59


State 43

   69 constant: CHARACTER_STRING .

    $default  reduce using rule 69 (constant)


State 44

   70 constant: CHARACTER_CONSTANT .

    $default  reduce using rule 70 (constant)


State 45

   63 constant: UNSIGNED_NUMBER .

    $default  reduce using rule 63 (constant)


State 46

   57 constant: REAL_CONSTANT .

    $default  reduce using rule 57 (constant)


State 47

   60 constant: LONG_REAL_CONSTANT .

    $default  reduce using rule 60 (constant)


State 48

   66 constant: IDENTIFIER .

    $default  reduce using rule 66 (constant)


State 49

   58 constant: '+' . REAL_CONSTANT
   61         | '+' . LONG_REAL_CONSTANT
   64         | '+' . UNSIGNED_NUMBER
   67         | '+' . IDENTIFIER

    UNSIGNED_NUMBER     shift, and go to state 60
    REAL_CONSTANT       shift, and go to state 61
    LONG_REAL_CONSTANT  shift, and go to state 62
    IDENTIFIER          shift, and go to state 63


State 50

   59 constant: '-' . REAL_CONSTANT
   62         | '-' . LONG_REAL_CONSTANT
   65         | '-' . UNSIGNED_NUMBER
   68         | '-' . IDENTIFIER

    UNSIGNED_NUMBER     shift, and go to state 64
    REAL_CONSTANT       shift, and go to state 65
    LONG_REAL_CONSTANT  shift, and go to state 66
    IDENTIFIER          shift, and go to state 67


State 51

   56 constant_definition: IDENTIFIER '=' $@16 constant . ';'

    ';'  shift, and go to state 68


State 52

   83 type_definition: IDENTIFIER '=' . $@17 type_denoter ';'

    $default  reduce using rule 82 ($@17)

    $@17  go to state 69


State 53

   81 type_definitions: type_definitions type_definition .

    $default  reduce using rule 81 (type_definitions)


State 54

  138 variable_declarator: IDENTIFIER .

    $default  reduce using rule 138 (variable_declarator)


State 55

  131 variable_declaration_part: VAR variable_declarations .
  133 variable_declarations: variable_declarations . variable_declaration

    IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 131 (variable_declaration_part)

    variable_declaration      go to state 70
    variable_declarator_list  go to state 57
    variable_declarator       go to state 58


State 56

  132 variable_declarations: variable_declaration .

    $default  reduce using rule 132 (variable_declarations)


State 57

  134 variable_declaration: variable_declarator_list . ':' type_denoter ';'
  137 variable_declarator_list: variable_declarator_list . ',' @25 variable_declarator

    ','  shift, and go to state 71
    ':'  shift, and go to state 72


State 58

  135 variable_declarator_list: variable_declarator .

    $default  reduce using rule 135 (variable_declarator_list)


State 59

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 type_definition_part variable_declaration_part $@5 . procedure_and_function_declaration_part $@6 statement_part

    FUNCTION   shift, and go to state 73
    PROCEDURE  shift, and go to state 74

    $default  reduce using rule 15 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 75
    procedure_and_function_declarations      go to state 76
    procedure_or_function_declaration        go to state 77
    function_declaration                     go to state 78
    function_head                            go to state 79
    procedure_declaration                    go to state 80
    procedure_head                           go to state 81


State 60

   64 constant: '+' UNSIGNED_NUMBER .

    $default  reduce using rule 64 (constant)


State 61

   58 constant: '+' REAL_CONSTANT .

    $default  reduce using rule 58 (constant)


State 62

   61 constant: '+' LONG_REAL_CONSTANT .

    $default  reduce using rule 61 (constant)


State 63

   67 constant: '+' IDENTIFIER .

    $default  reduce using rule 67 (constant)


State 64

   65 constant: '-' UNSIGNED_NUMBER .

    $default  reduce using rule 65 (constant)


State 65

   59 constant: '-' REAL_CONSTANT .

    $default  reduce using rule 59 (constant)


State 66

   62 constant: '-' LONG_REAL_CONSTANT .

    $default  reduce using rule 62 (constant)


State 67

   68 constant: '-' IDENTIFIER .

    $default  reduce using rule 68 (constant)


State 68

   56 constant_definition: IDENTIFIER '=' $@16 constant ';' .

    $default  reduce using rule 56 (constant_definition)


State 69

   83 type_definition: IDENTIFIER '=' $@17 . type_denoter ';'

    ARRAY               shift, and go to state 82
    FILe                shift, and go to state 83
    PACKED              shift, and go to state 84
    RECORD              shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 88
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90
    '^'                 shift, and go to state 91

    bound                     go to state 92
    type_denoter              go to state 93
    type                      go to state 94
    ordinal_type              go to state 95
    subrange_type             go to state 96
    structured_type           go to state 97
    unpacked_structured_type  go to state 98
    file_type                 go to state 99
    array_type                go to state 100
    pointer_type              go to state 101
    record_type               go to state 102


State 70

  133 variable_declarations: variable_declarations variable_declaration .

    $default  reduce using rule 133 (variable_declarations)


State 71

  137 variable_declarator_list: variable_declarator_list ',' . @25 variable_declarator

    $default  reduce using rule 136 (@25)

    @25  go to state 103


State 72

  134 variable_declaration: variable_declarator_list ':' . type_denoter ';'

    ARRAY               shift, and go to state 82
    FILe                shift, and go to state 83
    PACKED              shift, and go to state 84
    RECORD              shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 88
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90
    '^'                 shift, and go to state 91

    bound                     go to state 92
    type_denoter              go to state 104
    type                      go to state 94
    ordinal_type              go to state 95
    subrange_type             go to state 96
    structured_type           go to state 97
    unpacked_structured_type  go to state 98
    file_type                 go to state 99
    array_type                go to state 100
    pointer_type              go to state 101
    record_type               go to state 102


State 73

   25 function_head: FUNCTION . IDENTIFIER
   26              | FUNCTION . IDENTIFIER optional_formal_parameter_section_list ':' IDENTIFIER

    IDENTIFIER  shift, and go to state 105


State 74

   34 procedure_head: PROCEDURE . IDENTIFIER optional_formal_parameter_section_list

    IDENTIFIER  shift, and go to state 106


State 75

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part . $@6 statement_part

    $default  reduce using rule 10 ($@6)

    $@6  go to state 107


State 76

   16 procedure_and_function_declaration_part: procedure_and_function_declarations .
   18 procedure_and_function_declarations: procedure_and_function_declarations . procedure_or_function_declaration

    FUNCTION   shift, and go to state 73
    PROCEDURE  shift, and go to state 74

    $default  reduce using rule 16 (procedure_and_function_declaration_part)

    procedure_or_function_declaration  go to state 108
    function_declaration               go to state 78
    function_head                      go to state 79
    procedure_declaration              go to state 80
    procedure_head                     go to state 81


State 77

   17 procedure_and_function_declarations: procedure_or_function_declaration .

    $default  reduce using rule 17 (procedure_and_function_declarations)


State 78

   20 procedure_or_function_declaration: function_declaration .

    $default  reduce using rule 20 (procedure_or_function_declaration)


State 79

   21 function_declaration: function_head . ';' FORWARD ';'
   24                     | function_head . ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END ';'

    ';'  shift, and go to state 109


State 80

   19 procedure_or_function_declaration: procedure_declaration .

    $default  reduce using rule 19 (procedure_or_function_declaration)


State 81

   30 procedure_declaration: procedure_head . ';' FORWARD ';'
   33                      | procedure_head . ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END ';'

    ';'  shift, and go to state 110


State 82

   98 array_type: ARRAY . '[' index_type_list ']' OF @18 component_type

    '['  shift, and go to state 111


State 83

   96 file_type: FILe . OF component_type

    OF  shift, and go to state 112


State 84

   92 structured_type: PACKED . unpacked_structured_type

    ARRAY   shift, and go to state 82
    FILe    shift, and go to state 83
    RECORD  shift, and go to state 85

    unpacked_structured_type  go to state 113
    file_type                 go to state 99
    array_type                go to state 100
    record_type               go to state 102


State 85

  106 record_type: RECORD . field_list END

    IDENTIFIER  shift, and go to state 114

    $default  reduce using rule 112 (record_section)

    field_list             go to state 115
    fixed_part             go to state 116
    record_section_list    go to state 117
    record_section         go to state 118
    field_declarator_list  go to state 119
    field_declarator       go to state 120


State 86

   77 bound: CHARACTER_CONSTANT .

    $default  reduce using rule 77 (bound)


State 87

   71 bound: UNSIGNED_NUMBER .

    $default  reduce using rule 71 (bound)


State 88

   74 bound: IDENTIFIER .
   84 type_denoter: IDENTIFIER .

    DOTDOT    reduce using rule 74 (bound)
    $default  reduce using rule 84 (type_denoter)


State 89

   72 bound: '+' . UNSIGNED_NUMBER
   75      | '+' . IDENTIFIER

    UNSIGNED_NUMBER  shift, and go to state 121
    IDENTIFIER       shift, and go to state 122


State 90

   73 bound: '-' . UNSIGNED_NUMBER
   76      | '-' . IDENTIFIER

    UNSIGNED_NUMBER  shift, and go to state 123
    IDENTIFIER       shift, and go to state 124


State 91

   99 pointer_type: '^' . component_type

    ARRAY               shift, and go to state 82
    FILe                shift, and go to state 83
    PACKED              shift, and go to state 84
    RECORD              shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 88
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90
    '^'                 shift, and go to state 91

    bound                     go to state 92
    type_denoter              go to state 125
    type                      go to state 94
    ordinal_type              go to state 95
    subrange_type             go to state 96
    structured_type           go to state 97
    unpacked_structured_type  go to state 98
    file_type                 go to state 99
    array_type                go to state 100
    pointer_type              go to state 101
    component_type            go to state 126
    record_type               go to state 102


State 92

   90 subrange_type: bound . DOTDOT bound

    DOTDOT  shift, and go to state 127


State 93

   83 type_definition: IDENTIFIER '=' $@17 type_denoter . ';'

    ';'  shift, and go to state 128


State 94

   85 type_denoter: type .

    $default  reduce using rule 85 (type_denoter)


State 95

   86 type: ordinal_type .

    $default  reduce using rule 86 (type)


State 96

   89 ordinal_type: subrange_type .

    $default  reduce using rule 89 (ordinal_type)


State 97

   87 type: structured_type .

    $default  reduce using rule 87 (type)


State 98

   91 structured_type: unpacked_structured_type .

    $default  reduce using rule 91 (structured_type)


State 99

   95 unpacked_structured_type: file_type .

    $default  reduce using rule 95 (unpacked_structured_type)


State 100

   93 unpacked_structured_type: array_type .

    $default  reduce using rule 93 (unpacked_structured_type)


State 101

   88 type: pointer_type .

    $default  reduce using rule 88 (type)


State 102

   94 unpacked_structured_type: record_type .

    $default  reduce using rule 94 (unpacked_structured_type)


State 103

  137 variable_declarator_list: variable_declarator_list ',' @25 . variable_declarator

    IDENTIFIER  shift, and go to state 54

    variable_declarator  go to state 129


State 104

  134 variable_declaration: variable_declarator_list ':' type_denoter . ';'

    ';'  shift, and go to state 130


State 105

   25 function_head: FUNCTION IDENTIFIER .
   26              | FUNCTION IDENTIFIER . optional_formal_parameter_section_list ':' IDENTIFIER

    '('  shift, and go to state 131

    ':'       reduce using rule 27 (optional_formal_parameter_section_list)
    $default  reduce using rule 25 (function_head)

    optional_formal_parameter_section_list  go to state 132


State 106

   34 procedure_head: PROCEDURE IDENTIFIER . optional_formal_parameter_section_list

    '('  shift, and go to state 131

    $default  reduce using rule 27 (optional_formal_parameter_section_list)

    optional_formal_parameter_section_list  go to state 133


State 107

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 . statement_part

    BEGIn  shift, and go to state 134

    statement_part      go to state 135
    compound_statement  go to state 136


State 108

   18 procedure_and_function_declarations: procedure_and_function_declarations procedure_or_function_declaration .

    $default  reduce using rule 18 (procedure_and_function_declarations)


State 109

   21 function_declaration: function_head ';' . FORWARD ';'
   24                     | function_head ';' . $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END ';'

    FORWARD  shift, and go to state 137

    $default  reduce using rule 22 ($@7)

    $@7  go to state 138


State 110

   30 procedure_declaration: procedure_head ';' . FORWARD ';'
   33                      | procedure_head ';' . $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END ';'

    FORWARD  shift, and go to state 139

    $default  reduce using rule 31 ($@10)

    $@10  go to state 140


State 111

   98 array_type: ARRAY '[' . index_type_list ']' OF @18 component_type

    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 141
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90

    bound            go to state 142
    index_type_list  go to state 143
    index_type       go to state 144


State 112

   96 file_type: FILe OF . component_type

    ARRAY               shift, and go to state 82
    FILe                shift, and go to state 83
    PACKED              shift, and go to state 84
    RECORD              shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 88
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90
    '^'                 shift, and go to state 91

    bound                     go to state 92
    type_denoter              go to state 125
    type                      go to state 94
    ordinal_type              go to state 95
    subrange_type             go to state 96
    structured_type           go to state 97
    unpacked_structured_type  go to state 98
    file_type                 go to state 99
    array_type                go to state 100
    pointer_type              go to state 101
    component_type            go to state 145
    record_type               go to state 102


State 113

   92 structured_type: PACKED unpacked_structured_type .

    $default  reduce using rule 92 (structured_type)


State 114

  117 field_declarator: IDENTIFIER .

    $default  reduce using rule 117 (field_declarator)


State 115

  106 record_type: RECORD field_list . END

    END  shift, and go to state 146


State 116

  107 field_list: fixed_part . variant_part

    CASE  shift, and go to state 147

    $default  reduce using rule 118 (variant_part)

    variant_part  go to state 148


State 117

  108 fixed_part: record_section_list .
  111 record_section_list: record_section_list . ';' @20 record_section

    ';'  shift, and go to state 149

    $default  reduce using rule 108 (fixed_part)


State 118

  109 record_section_list: record_section .

    $default  reduce using rule 109 (record_section_list)


State 119

  113 record_section: field_declarator_list . ':' type_denoter
  116 field_declarator_list: field_declarator_list . ',' @21 field_declarator

    ','  shift, and go to state 150
    ':'  shift, and go to state 151


State 120

  114 field_declarator_list: field_declarator .

    $default  reduce using rule 114 (field_declarator_list)


State 121

   72 bound: '+' UNSIGNED_NUMBER .

    $default  reduce using rule 72 (bound)


State 122

   75 bound: '+' IDENTIFIER .

    $default  reduce using rule 75 (bound)


State 123

   73 bound: '-' UNSIGNED_NUMBER .

    $default  reduce using rule 73 (bound)


State 124

   76 bound: '-' IDENTIFIER .

    $default  reduce using rule 76 (bound)


State 125

  100 component_type: type_denoter .

    $default  reduce using rule 100 (component_type)


State 126

   99 pointer_type: '^' component_type .

    $default  reduce using rule 99 (pointer_type)


State 127

   90 subrange_type: bound DOTDOT . bound

    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 152
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90

    bound  go to state 153


State 128

   83 type_definition: IDENTIFIER '=' $@17 type_denoter ';' .

    $default  reduce using rule 83 (type_definition)


State 129

  137 variable_declarator_list: variable_declarator_list ',' @25 variable_declarator .

    $default  reduce using rule 137 (variable_declarator_list)


State 130

  134 variable_declaration: variable_declarator_list ':' type_denoter ';' .

    $default  reduce using rule 134 (variable_declaration)


State 131

   29 optional_formal_parameter_section_list: '(' . $@9 formal_parameter_section_list ')'

    $default  reduce using rule 28 ($@9)

    $@9  go to state 154


State 132

   26 function_head: FUNCTION IDENTIFIER optional_formal_parameter_section_list . ':' IDENTIFIER

    ':'  shift, and go to state 155


State 133

   34 procedure_head: PROCEDURE IDENTIFIER optional_formal_parameter_section_list .

    $default  reduce using rule 34 (procedure_head)


State 134

  141 compound_statement: BEGIn . $@26 statement_sequence END

    $default  reduce using rule 140 ($@26)

    $@26  go to state 156


State 135

   11 program_block: $@2 label_declaration_part $@3 constant_definition_part $@4 type_definition_part variable_declaration_part $@5 procedure_and_function_declaration_part $@6 statement_part .

    $default  reduce using rule 11 (program_block)


State 136

  139 statement_part: compound_statement .

    $default  reduce using rule 139 (statement_part)


State 137

   21 function_declaration: function_head ';' FORWARD . ';'

    ';'  shift, and go to state 157


State 138

   24 function_declaration: function_head ';' $@7 . label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END ';'

    LABEL  shift, and go to state 13

    $default  reduce using rule 47 (label_declaration_part)

    label_declaration_part  go to state 158


State 139

   30 procedure_declaration: procedure_head ';' FORWARD . ';'

    ';'  shift, and go to state 159


State 140

   33 procedure_declaration: procedure_head ';' $@10 . label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END ';'

    LABEL  shift, and go to state 13

    $default  reduce using rule 47 (label_declaration_part)

    label_declaration_part  go to state 160


State 141

   74 bound: IDENTIFIER .
  105 index_type: IDENTIFIER .

    DOTDOT    reduce using rule 74 (bound)
    $default  reduce using rule 105 (index_type)


State 142

  104 index_type: bound . DOTDOT bound

    DOTDOT  shift, and go to state 161


State 143

   98 array_type: ARRAY '[' index_type_list . ']' OF @18 component_type
  103 index_type_list: index_type_list . ',' @19 index_type

    ','  shift, and go to state 162
    ']'  shift, and go to state 163


State 144

  101 index_type_list: index_type .

    $default  reduce using rule 101 (index_type_list)


State 145

   96 file_type: FILe OF component_type .

    $default  reduce using rule 96 (file_type)


State 146

  106 record_type: RECORD field_list END .

    $default  reduce using rule 106 (record_type)


State 147

  119 variant_part: CASE . variant_selector OF variant_list

    IDENTIFIER  shift, and go to state 164

    variant_selector  go to state 165
    tag_type          go to state 166


State 148

  107 field_list: fixed_part variant_part .

    $default  reduce using rule 107 (field_list)


State 149

  111 record_section_list: record_section_list ';' . @20 record_section

    $default  reduce using rule 110 (@20)

    @20  go to state 167


State 150

  116 field_declarator_list: field_declarator_list ',' . @21 field_declarator

    $default  reduce using rule 115 (@21)

    @21  go to state 168


State 151

  113 record_section: field_declarator_list ':' . type_denoter

    ARRAY               shift, and go to state 82
    FILe                shift, and go to state 83
    PACKED              shift, and go to state 84
    RECORD              shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 88
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90
    '^'                 shift, and go to state 91

    bound                     go to state 92
    type_denoter              go to state 169
    type                      go to state 94
    ordinal_type              go to state 95
    subrange_type             go to state 96
    structured_type           go to state 97
    unpacked_structured_type  go to state 98
    file_type                 go to state 99
    array_type                go to state 100
    pointer_type              go to state 101
    record_type               go to state 102


State 152

   74 bound: IDENTIFIER .

    $default  reduce using rule 74 (bound)


State 153

   90 subrange_type: bound DOTDOT bound .

    $default  reduce using rule 90 (subrange_type)


State 154

   29 optional_formal_parameter_section_list: '(' $@9 . formal_parameter_section_list ')'

    VAR  shift, and go to state 170

    $default  reduce using rule 38 ($@13)

    formal_parameter_section_list  go to state 171
    formal_parameter_section       go to state 172
    $@13                           go to state 173


State 155

   26 function_head: FUNCTION IDENTIFIER optional_formal_parameter_section_list ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 174


State 156

  141 compound_statement: BEGIn $@26 . statement_sequence END

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement_sequence  go to state 176
    statement           go to state 177
    optional_label      go to state 178
    label               go to state 179


State 157

   21 function_declaration: function_head ';' FORWARD ';' .

    $default  reduce using rule 21 (function_declaration)


State 158

   24 function_declaration: function_head ';' $@7 label_declaration_part . constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END ';'

    CONST  shift, and go to state 25

    $default  reduce using rule 51 (constant_definition_part)

    constant_definition_part  go to state 180


State 159

   30 procedure_declaration: procedure_head ';' FORWARD ';' .

    $default  reduce using rule 30 (procedure_declaration)


State 160

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part . constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END ';'

    CONST  shift, and go to state 25

    $default  reduce using rule 51 (constant_definition_part)

    constant_definition_part  go to state 181


State 161

  104 index_type: bound DOTDOT . bound

    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 152
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90

    bound  go to state 182


State 162

  103 index_type_list: index_type_list ',' . @19 index_type

    $default  reduce using rule 102 (@19)

    @19  go to state 183


State 163

   98 array_type: ARRAY '[' index_type_list ']' . OF @18 component_type

    OF  shift, and go to state 184


State 164

  121 tag_type: IDENTIFIER .

    $default  reduce using rule 121 (tag_type)


State 165

  119 variant_part: CASE variant_selector . OF variant_list

    OF  shift, and go to state 185


State 166

  120 variant_selector: tag_type .

    $default  reduce using rule 120 (variant_selector)


State 167

  111 record_section_list: record_section_list ';' @20 . record_section

    IDENTIFIER  shift, and go to state 114

    $default  reduce using rule 112 (record_section)

    record_section         go to state 186
    field_declarator_list  go to state 119
    field_declarator       go to state 120


State 168

  116 field_declarator_list: field_declarator_list ',' @21 . field_declarator

    IDENTIFIER  shift, and go to state 114

    field_declarator  go to state 187


State 169

  113 record_section: field_declarator_list ':' type_denoter .

    $default  reduce using rule 113 (record_section)


State 170

   41 formal_parameter_section: VAR . $@14 parameter_group

    $default  reduce using rule 40 ($@14)

    $@14  go to state 188


State 171

   29 optional_formal_parameter_section_list: '(' $@9 formal_parameter_section_list . ')'
   37 formal_parameter_section_list: formal_parameter_section_list . ';' @12 formal_parameter_section

    ';'  shift, and go to state 189
    ')'  shift, and go to state 190


State 172

   35 formal_parameter_section_list: formal_parameter_section .

    $default  reduce using rule 35 (formal_parameter_section_list)


State 173

   39 formal_parameter_section: $@13 . parameter_group

    IDENTIFIER  shift, and go to state 191

    parameter_group            go to state 192
    parameter_declarator_list  go to state 193
    parameter_declarator       go to state 194


State 174

   26 function_head: FUNCTION IDENTIFIER optional_formal_parameter_section_list ':' IDENTIFIER .

    $default  reduce using rule 26 (function_head)


State 175

  149 label: UNSIGNED_NUMBER . ':'

    ':'  shift, and go to state 195


State 176

  141 compound_statement: BEGIn $@26 statement_sequence . END
  143 statement_sequence: statement_sequence . ';' statement

    END  shift, and go to state 196
    ';'  shift, and go to state 197


State 177

  142 statement_sequence: statement .

    $default  reduce using rule 142 (statement_sequence)


State 178

  145 statement: optional_label . $@27 simple_statement
  146          | optional_label . structured_statement

    BEGIn   shift, and go to state 134
    CASE    shift, and go to state 198
    FOR     shift, and go to state 199
    IF      shift, and go to state 200
    REPEAT  shift, and go to state 201
    WHILE   shift, and go to state 202

    $default  reduce using rule 144 ($@27)

    compound_statement     go to state 203
    $@27                   go to state 204
    structured_statement   go to state 205
    conditional_statement  go to state 206
    if_statement           go to state 207
    case_statement         go to state 208
    repetitive_statement   go to state 209
    while_statement        go to state 210
    repeat_statement       go to state 211
    for_statement          go to state 212


State 179

  148 optional_label: label .

    $default  reduce using rule 148 (optional_label)


State 180

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part . type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END ';'

    TYPE  shift, and go to state 35

    $default  reduce using rule 78 (type_definition_part)

    type_definition_part  go to state 213


State 181

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part . type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END ';'

    TYPE  shift, and go to state 35

    $default  reduce using rule 78 (type_definition_part)

    type_definition_part  go to state 214


State 182

  104 index_type: bound DOTDOT bound .

    $default  reduce using rule 104 (index_type)


State 183

  103 index_type_list: index_type_list ',' @19 . index_type

    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 141
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90

    bound       go to state 142
    index_type  go to state 215


State 184

   98 array_type: ARRAY '[' index_type_list ']' OF . @18 component_type

    $default  reduce using rule 97 (@18)

    @18  go to state 216


State 185

  119 variant_part: CASE variant_selector OF . variant_list

    END       reduce using rule 125 (variant)
    ';'       reduce using rule 125 (variant)
    ')'       reduce using rule 125 (variant)
    $default  reduce using rule 126 ($@23)

    variant_list  go to state 217
    variant       go to state 218
    $@23          go to state 219


State 186

  111 record_section_list: record_section_list ';' @20 record_section .

    $default  reduce using rule 111 (record_section_list)


State 187

  116 field_declarator_list: field_declarator_list ',' @21 field_declarator .

    $default  reduce using rule 116 (field_declarator_list)


State 188

   41 formal_parameter_section: VAR $@14 . parameter_group

    IDENTIFIER  shift, and go to state 191

    parameter_group            go to state 220
    parameter_declarator_list  go to state 193
    parameter_declarator       go to state 194


State 189

   37 formal_parameter_section_list: formal_parameter_section_list ';' . @12 formal_parameter_section

    $default  reduce using rule 36 (@12)

    @12  go to state 221


State 190

   29 optional_formal_parameter_section_list: '(' $@9 formal_parameter_section_list ')' .

    $default  reduce using rule 29 (optional_formal_parameter_section_list)


State 191

   46 parameter_declarator: IDENTIFIER .

    $default  reduce using rule 46 (parameter_declarator)


State 192

   39 formal_parameter_section: $@13 parameter_group .

    $default  reduce using rule 39 (formal_parameter_section)


State 193

   42 parameter_group: parameter_declarator_list . ':' IDENTIFIER
   45 parameter_declarator_list: parameter_declarator_list . ',' @15 parameter_declarator

    ','  shift, and go to state 222
    ':'  shift, and go to state 223


State 194

   43 parameter_declarator_list: parameter_declarator .

    $default  reduce using rule 43 (parameter_declarator_list)


State 195

  149 label: UNSIGNED_NUMBER ':' .

    $default  reduce using rule 149 (label)


State 196

  141 compound_statement: BEGIn $@26 statement_sequence END .

    $default  reduce using rule 141 (compound_statement)


State 197

  143 statement_sequence: statement_sequence ';' . statement

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement       go to state 224
    optional_label  go to state 178
    label           go to state 179


State 198

  198 case_statement: CASE . $@42 case_index OF $@43 case_list_element_sequence optional_semicolon END

    $default  reduce using rule 196 ($@42)

    $@42  go to state 225


State 199

  223 for_statement: FOR . IDENTIFIER ASSIGN $@50 initial_value to_or_downto $@51 final_value DO $@52 statement

    IDENTIFIER  shift, and go to state 226


State 200

  192 if_statement: IF . $@39 boolean_expression THEN $@40 statement else_part

    $default  reduce using rule 190 ($@39)

    $@39  go to state 227


State 201

  219 repeat_statement: REPEAT . $@48 statement_sequence UNTIL $@49 expression

    $default  reduce using rule 217 ($@48)

    $@48  go to state 228


State 202

  216 while_statement: WHILE . $@46 expression DO $@47 statement

    $default  reduce using rule 214 ($@46)

    $@46  go to state 229


State 203

  185 structured_statement: compound_statement .

    $default  reduce using rule 185 (structured_statement)


State 204

  145 statement: optional_label $@27 . simple_statement

    GOTO        shift, and go to state 230
    READ        shift, and go to state 231
    READLN      shift, and go to state 232
    WRITE       shift, and go to state 233
    WRITELN     shift, and go to state 234
    IDENTIFIER  shift, and go to state 235

    $default  reduce using rule 150 (simple_statement)

    simple_statement      go to state 236
    procedure_statement   go to state 237
    assignment_statement  go to state 238
    goto_statement        go to state 239
    variable_access       go to state 240
    buffer_variable       go to state 241
    entire_variable       go to state 242
    variable_identifier   go to state 243
    component_variable    go to state 244
    indexed_variable      go to state 245
    array_variable        go to state 246
    field_designator      go to state 247
    record_variable       go to state 248


State 205

  146 statement: optional_label structured_statement .

    $default  reduce using rule 146 (statement)


State 206

  186 structured_statement: conditional_statement .

    $default  reduce using rule 186 (structured_statement)


State 207

  188 conditional_statement: if_statement .

    $default  reduce using rule 188 (conditional_statement)


State 208

  189 conditional_statement: case_statement .

    $default  reduce using rule 189 (conditional_statement)


State 209

  187 structured_statement: repetitive_statement .

    $default  reduce using rule 187 (structured_statement)


State 210

  212 repetitive_statement: while_statement .

    $default  reduce using rule 212 (repetitive_statement)


State 211

  211 repetitive_statement: repeat_statement .

    $default  reduce using rule 211 (repetitive_statement)


State 212

  213 repetitive_statement: for_statement .

    $default  reduce using rule 213 (repetitive_statement)


State 213

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part . variable_declaration_part BEGIn $@8 statement_sequence END ';'

    VAR  shift, and go to state 41

    $default  reduce using rule 130 (variable_declaration_part)

    variable_declaration_part  go to state 249


State 214

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part . variable_declaration_part BEGIn $@11 statement_sequence END ';'

    VAR  shift, and go to state 41

    $default  reduce using rule 130 (variable_declaration_part)

    variable_declaration_part  go to state 250


State 215

  103 index_type_list: index_type_list ',' @19 index_type .

    $default  reduce using rule 103 (index_type_list)


State 216

   98 array_type: ARRAY '[' index_type_list ']' OF @18 . component_type

    ARRAY               shift, and go to state 82
    FILe                shift, and go to state 83
    PACKED              shift, and go to state 84
    RECORD              shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    UNSIGNED_NUMBER     shift, and go to state 87
    IDENTIFIER          shift, and go to state 88
    '+'                 shift, and go to state 89
    '-'                 shift, and go to state 90
    '^'                 shift, and go to state 91

    bound                     go to state 92
    type_denoter              go to state 125
    type                      go to state 94
    ordinal_type              go to state 95
    subrange_type             go to state 96
    structured_type           go to state 97
    unpacked_structured_type  go to state 98
    file_type                 go to state 99
    array_type                go to state 100
    pointer_type              go to state 101
    component_type            go to state 251
    record_type               go to state 102


State 217

  119 variant_part: CASE variant_selector OF variant_list .
  124 variant_list: variant_list . ';' @22 variant

    ';'  shift, and go to state 252

    $default  reduce using rule 119 (variant_part)


State 218

  122 variant_list: variant .

    $default  reduce using rule 122 (variant_list)


State 219

  128 variant: $@23 . case_constant_list ':' '(' $@24 variant_field_list ')'

    OTHERS  shift, and go to state 253

    $default  reduce using rule 208 ($@45)

    case_constant_list  go to state 254
    case_constant       go to state 255
    $@45                go to state 256


State 220

   41 formal_parameter_section: VAR $@14 parameter_group .

    $default  reduce using rule 41 (formal_parameter_section)


State 221

   37 formal_parameter_section_list: formal_parameter_section_list ';' @12 . formal_parameter_section

    VAR  shift, and go to state 170

    $default  reduce using rule 38 ($@13)

    formal_parameter_section  go to state 257
    $@13                      go to state 173


State 222

   45 parameter_declarator_list: parameter_declarator_list ',' . @15 parameter_declarator

    $default  reduce using rule 44 (@15)

    @15  go to state 258


State 223

   42 parameter_group: parameter_declarator_list ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 259


State 224

  143 statement_sequence: statement_sequence ';' statement .

    $default  reduce using rule 143 (statement_sequence)


State 225

  198 case_statement: CASE $@42 . case_index OF $@43 case_list_element_sequence optional_semicolon END

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    case_index           go to state 270
    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 272
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 226

  223 for_statement: FOR IDENTIFIER . ASSIGN $@50 initial_value to_or_downto $@51 final_value DO $@52 statement

    ASSIGN  shift, and go to state 276


State 227

  192 if_statement: IF $@39 . boolean_expression THEN $@40 statement else_part

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 277
    boolean_expression   go to state 278
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 228

  219 repeat_statement: REPEAT $@48 . statement_sequence UNTIL $@49 expression

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement_sequence  go to state 279
    statement           go to state 177
    optional_label      go to state 178
    label               go to state 179


State 229

  216 while_statement: WHILE $@46 . expression DO $@47 statement

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 280
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 230

  231 goto_statement: GOTO . UNSIGNED_NUMBER

    UNSIGNED_NUMBER  shift, and go to state 281


State 231

  155 procedure_statement: READ . $@28 read_parameter_list

    $default  reduce using rule 154 ($@28)

    $@28  go to state 282


State 232

  157 procedure_statement: READLN . $@29 readln_parameter_list

    $default  reduce using rule 156 ($@29)

    $@29  go to state 283


State 233

  159 procedure_statement: WRITE . $@30 write_parameter_list

    $default  reduce using rule 158 ($@30)

    $@30  go to state 284


State 234

  161 procedure_statement: WRITELN . $@31 writeln_parameter_list

    $default  reduce using rule 160 ($@31)

    $@31  go to state 285


State 235

  163 procedure_statement: IDENTIFIER . $@32 optional_actual_parameter_list
  238 variable_identifier: IDENTIFIER .

    ASSIGN    reduce using rule 238 (variable_identifier)
    '.'       reduce using rule 238 (variable_identifier)
    '['       reduce using rule 238 (variable_identifier)
    '^'       reduce using rule 238 (variable_identifier)
    $default  reduce using rule 162 ($@32)

    $@32  go to state 286


State 236

  145 statement: optional_label $@27 simple_statement .

    $default  reduce using rule 145 (statement)


State 237

  152 simple_statement: procedure_statement .

    $default  reduce using rule 152 (simple_statement)


State 238

  151 simple_statement: assignment_statement .

    $default  reduce using rule 151 (simple_statement)


State 239

  153 simple_statement: goto_statement .

    $default  reduce using rule 153 (simple_statement)


State 240

  230 assignment_statement: variable_access . $@53 assign $@54 expression
  236 buffer_variable: variable_access . '^'
  243 array_variable: variable_access .
  245 record_variable: variable_access .

    '^'  shift, and go to state 287

    '.'       reduce using rule 245 (record_variable)
    '['       reduce using rule 243 (array_variable)
    $default  reduce using rule 228 ($@53)

    $@53  go to state 288


State 241

  235 variable_access: buffer_variable .

    $default  reduce using rule 235 (variable_access)


State 242

  233 variable_access: entire_variable .

    $default  reduce using rule 233 (variable_access)


State 243

  237 entire_variable: variable_identifier .

    $default  reduce using rule 237 (entire_variable)


State 244

  234 variable_access: component_variable .

    $default  reduce using rule 234 (variable_access)


State 245

  239 component_variable: indexed_variable .

    $default  reduce using rule 239 (component_variable)


State 246

  242 indexed_variable: array_variable . '[' @55 index_expression_list ']'

    '['  shift, and go to state 289


State 247

  240 component_variable: field_designator .

    $default  reduce using rule 240 (component_variable)


State 248

  244 field_designator: record_variable . '.' IDENTIFIER

    '.'  shift, and go to state 290


State 249

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part . BEGIn $@8 statement_sequence END ';'

    BEGIn  shift, and go to state 291


State 250

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part . BEGIn $@11 statement_sequence END ';'

    BEGIn  shift, and go to state 292


State 251

   98 array_type: ARRAY '[' index_type_list ']' OF @18 component_type .

    $default  reduce using rule 98 (array_type)


State 252

  124 variant_list: variant_list ';' . @22 variant

    $default  reduce using rule 123 (@22)

    @22  go to state 293


State 253

  210 case_constant: OTHERS .

    $default  reduce using rule 210 (case_constant)


State 254

  128 variant: $@23 case_constant_list . ':' '(' $@24 variant_field_list ')'
  207 case_constant_list: case_constant_list . ',' case_constant

    ','  shift, and go to state 294
    ':'  shift, and go to state 295


State 255

  206 case_constant_list: case_constant .

    $default  reduce using rule 206 (case_constant_list)


State 256

  209 case_constant: $@45 . constant

    CHARACTER_STRING    shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44
    UNSIGNED_NUMBER     shift, and go to state 45
    REAL_CONSTANT       shift, and go to state 46
    LONG_REAL_CONSTANT  shift, and go to state 47
    IDENTIFIER          shift, and go to state 48
    '+'                 shift, and go to state 49
    '-'                 shift, and go to state 50

    constant  go to state 296


State 257

   37 formal_parameter_section_list: formal_parameter_section_list ';' @12 formal_parameter_section .

    $default  reduce using rule 37 (formal_parameter_section_list)


State 258

   45 parameter_declarator_list: parameter_declarator_list ',' @15 . parameter_declarator

    IDENTIFIER  shift, and go to state 191

    parameter_declarator  go to state 297


State 259

   42 parameter_group: parameter_declarator_list ':' IDENTIFIER .

    $default  reduce using rule 42 (parameter_group)


State 260

  290 factor: NOT . $@66 factor

    $default  reduce using rule 289 ($@66)

    $@66  go to state 298


State 261

  282 factor: CHARACTER_STRING .

    $default  reduce using rule 282 (factor)


State 262

  283 factor: CHARACTER_CONSTANT .

    $default  reduce using rule 283 (factor)


State 263

  279 factor: UNSIGNED_NUMBER .

    $default  reduce using rule 279 (factor)


State 264

  280 factor: REAL_CONSTANT .

    $default  reduce using rule 280 (factor)


State 265

  281 factor: LONG_REAL_CONSTANT .

    $default  reduce using rule 281 (factor)


State 266

  238 variable_identifier: IDENTIFIER .
  286 factor: IDENTIFIER . '(' $@64 actual_parameter_list ')'

    '('  shift, and go to state 299

    $default  reduce using rule 238 (variable_identifier)


State 267

  288 factor: '(' . $@65 expression ')'

    $default  reduce using rule 287 ($@65)

    $@65  go to state 300


State 268

  262 simple_expression: '+' . term

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    term                 go to state 301
    factor               go to state 275


State 269

  261 simple_expression: '-' . $@58 term

    $default  reduce using rule 260 ($@58)

    $@58  go to state 302


State 270

  198 case_statement: CASE $@42 case_index . OF $@43 case_list_element_sequence optional_semicolon END

    OF  shift, and go to state 303


State 271

  236 buffer_variable: variable_access . '^'
  243 array_variable: variable_access .
  245 record_variable: variable_access .
  284 factor: variable_access .

    '^'  shift, and go to state 287

    '.'       reduce using rule 245 (record_variable)
    '['       reduce using rule 243 (array_variable)
    $default  reduce using rule 284 (factor)


State 272

  201 case_index: expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 201 (case_index)

    relational_operator  go to state 310


State 273

  249 expression: simple_expression .
  264 simple_expression: simple_expression . adding_operator @59 term
  266                  | simple_expression . OR $@60 term

    OR   shift, and go to state 311
    '+'  shift, and go to state 312
    '-'  shift, and go to state 313

    $default  reduce using rule 249 (expression)

    adding_operator  go to state 314


State 274

  259 simple_expression: term .
  271 term: term . '/' $@61 factor
  273     | term . multiplying_operator @62 factor
  275     | term . AND $@63 factor

    AND  shift, and go to state 315
    DIV  shift, and go to state 316
    MOD  shift, and go to state 317
    '/'  shift, and go to state 318
    '*'  shift, and go to state 319

    $default  reduce using rule 259 (simple_expression)

    multiplying_operator  go to state 320


State 275

  269 term: factor .

    $default  reduce using rule 269 (term)


State 276

  223 for_statement: FOR IDENTIFIER ASSIGN . $@50 initial_value to_or_downto $@51 final_value DO $@52 statement

    $default  reduce using rule 220 ($@50)

    $@50  go to state 321


State 277

  251 expression: expression . relational_operator @57 simple_expression
  252 boolean_expression: expression .

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 252 (boolean_expression)

    relational_operator  go to state 310


State 278

  192 if_statement: IF $@39 boolean_expression . THEN $@40 statement else_part

    THEN  shift, and go to state 322


State 279

  143 statement_sequence: statement_sequence . ';' statement
  219 repeat_statement: REPEAT $@48 statement_sequence . UNTIL $@49 expression

    UNTIL  shift, and go to state 323
    ';'    shift, and go to state 197


State 280

  216 while_statement: WHILE $@46 expression . DO $@47 statement
  251 expression: expression . relational_operator @57 simple_expression

    DO   shift, and go to state 324
    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    relational_operator  go to state 310


State 281

  231 goto_statement: GOTO UNSIGNED_NUMBER .

    $default  reduce using rule 231 (goto_statement)


State 282

  155 procedure_statement: READ $@28 . read_parameter_list

    '('  shift, and go to state 325

    read_parameter_list  go to state 326


State 283

  157 procedure_statement: READLN $@29 . readln_parameter_list

    '('  shift, and go to state 325

    $default  reduce using rule 164 (readln_parameter_list)

    readln_parameter_list  go to state 327
    read_parameter_list    go to state 328


State 284

  159 procedure_statement: WRITE $@30 . write_parameter_list

    '('  shift, and go to state 329

    write_parameter_list  go to state 330


State 285

  161 procedure_statement: WRITELN $@31 . writeln_parameter_list

    '('  shift, and go to state 329

    $default  reduce using rule 172 (writeln_parameter_list)

    writeln_parameter_list  go to state 331
    write_parameter_list    go to state 332


State 286

  163 procedure_statement: IDENTIFIER $@32 . optional_actual_parameter_list

    '('  shift, and go to state 333

    $default  reduce using rule 291 (optional_actual_parameter_list)

    optional_actual_parameter_list  go to state 334


State 287

  236 buffer_variable: variable_access '^' .

    $default  reduce using rule 236 (buffer_variable)


State 288

  230 assignment_statement: variable_access $@53 . assign $@54 expression

    ASSIGN  shift, and go to state 335

    assign  go to state 336


State 289

  242 indexed_variable: array_variable '[' . @55 index_expression_list ']'

    $default  reduce using rule 241 (@55)

    @55  go to state 337


State 290

  244 field_designator: record_variable '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 338


State 291

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn . $@8 statement_sequence END ';'

    $default  reduce using rule 23 ($@8)

    $@8  go to state 339


State 292

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn . $@11 statement_sequence END ';'

    $default  reduce using rule 32 ($@11)

    $@11  go to state 340


State 293

  124 variant_list: variant_list ';' @22 . variant

    END       reduce using rule 125 (variant)
    ';'       reduce using rule 125 (variant)
    ')'       reduce using rule 125 (variant)
    $default  reduce using rule 126 ($@23)

    variant  go to state 341
    $@23     go to state 219


State 294

  207 case_constant_list: case_constant_list ',' . case_constant

    OTHERS  shift, and go to state 253

    $default  reduce using rule 208 ($@45)

    case_constant  go to state 342
    $@45           go to state 256


State 295

  128 variant: $@23 case_constant_list ':' . '(' $@24 variant_field_list ')'

    '('  shift, and go to state 343


State 296

  209 case_constant: $@45 constant .

    $default  reduce using rule 209 (case_constant)


State 297

   45 parameter_declarator_list: parameter_declarator_list ',' @15 parameter_declarator .

    $default  reduce using rule 45 (parameter_declarator_list)


State 298

  290 factor: NOT $@66 . factor

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    factor               go to state 344


State 299

  286 factor: IDENTIFIER '(' . $@64 actual_parameter_list ')'

    $default  reduce using rule 285 ($@64)

    $@64  go to state 345


State 300

  288 factor: '(' $@65 . expression ')'

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 346
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 301

  262 simple_expression: '+' term .
  271 term: term . '/' $@61 factor
  273     | term . multiplying_operator @62 factor
  275     | term . AND $@63 factor

    AND  shift, and go to state 315
    DIV  shift, and go to state 316
    MOD  shift, and go to state 317
    '/'  shift, and go to state 318
    '*'  shift, and go to state 319

    $default  reduce using rule 262 (simple_expression)

    multiplying_operator  go to state 320


State 302

  261 simple_expression: '-' $@58 . term

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    term                 go to state 347
    factor               go to state 275


State 303

  198 case_statement: CASE $@42 case_index OF . $@43 case_list_element_sequence optional_semicolon END

    $default  reduce using rule 197 ($@43)

    $@43  go to state 348


State 304

  258 relational_operator: NEQ .

    $default  reduce using rule 258 (relational_operator)


State 305

  256 relational_operator: GEQ .

    $default  reduce using rule 256 (relational_operator)


State 306

  255 relational_operator: LEQ .

    $default  reduce using rule 255 (relational_operator)


State 307

  257 relational_operator: '=' .

    $default  reduce using rule 257 (relational_operator)


State 308

  253 relational_operator: '<' .

    $default  reduce using rule 253 (relational_operator)


State 309

  254 relational_operator: '>' .

    $default  reduce using rule 254 (relational_operator)


State 310

  251 expression: expression relational_operator . @57 simple_expression

    $default  reduce using rule 250 (@57)

    @57  go to state 349


State 311

  266 simple_expression: simple_expression OR . $@60 term

    $default  reduce using rule 265 ($@60)

    $@60  go to state 350


State 312

  268 adding_operator: '+' .

    $default  reduce using rule 268 (adding_operator)


State 313

  267 adding_operator: '-' .

    $default  reduce using rule 267 (adding_operator)


State 314

  264 simple_expression: simple_expression adding_operator . @59 term

    $default  reduce using rule 263 (@59)

    @59  go to state 351


State 315

  275 term: term AND . $@63 factor

    $default  reduce using rule 274 ($@63)

    $@63  go to state 352


State 316

  277 multiplying_operator: DIV .

    $default  reduce using rule 277 (multiplying_operator)


State 317

  278 multiplying_operator: MOD .

    $default  reduce using rule 278 (multiplying_operator)


State 318

  271 term: term '/' . $@61 factor

    $default  reduce using rule 270 ($@61)

    $@61  go to state 353


State 319

  276 multiplying_operator: '*' .

    $default  reduce using rule 276 (multiplying_operator)


State 320

  273 term: term multiplying_operator . @62 factor

    $default  reduce using rule 272 (@62)

    @62  go to state 354


State 321

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 . initial_value to_or_downto $@51 final_value DO $@52 statement

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    initial_value        go to state 355
    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 356
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 322

  192 if_statement: IF $@39 boolean_expression THEN . $@40 statement else_part

    $default  reduce using rule 191 ($@40)

    $@40  go to state 357


State 323

  219 repeat_statement: REPEAT $@48 statement_sequence UNTIL . $@49 expression

    $default  reduce using rule 218 ($@49)

    $@49  go to state 358


State 324

  216 while_statement: WHILE $@46 expression DO . $@47 statement

    $default  reduce using rule 215 ($@47)

    $@47  go to state 359


State 325

  167 read_parameter_list: '(' . $@33 read_parameter_list1 ')'

    $default  reduce using rule 166 ($@33)

    $@33  go to state 360


State 326

  155 procedure_statement: READ $@28 read_parameter_list .

    $default  reduce using rule 155 (procedure_statement)


State 327

  157 procedure_statement: READLN $@29 readln_parameter_list .

    $default  reduce using rule 157 (procedure_statement)


State 328

  165 readln_parameter_list: read_parameter_list .

    $default  reduce using rule 165 (readln_parameter_list)


State 329

  175 write_parameter_list: '(' . $@35 write_parameter_list1 ')'

    $default  reduce using rule 174 ($@35)

    $@35  go to state 361


State 330

  159 procedure_statement: WRITE $@30 write_parameter_list .

    $default  reduce using rule 159 (procedure_statement)


State 331

  161 procedure_statement: WRITELN $@31 writeln_parameter_list .

    $default  reduce using rule 161 (procedure_statement)


State 332

  173 writeln_parameter_list: write_parameter_list .

    $default  reduce using rule 173 (writeln_parameter_list)


State 333

  292 optional_actual_parameter_list: '(' . actual_parameter_list ')'

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access        go to state 271
    buffer_variable        go to state 241
    entire_variable        go to state 242
    variable_identifier    go to state 243
    component_variable     go to state 244
    indexed_variable       go to state 245
    array_variable         go to state 246
    field_designator       go to state 247
    record_variable        go to state 248
    expression             go to state 362
    simple_expression      go to state 273
    term                   go to state 274
    factor                 go to state 275
    actual_parameter_list  go to state 363
    actual_parameter       go to state 364


State 334

  163 procedure_statement: IDENTIFIER $@32 optional_actual_parameter_list .

    $default  reduce using rule 163 (procedure_statement)


State 335

  232 assign: ASSIGN .

    $default  reduce using rule 232 (assign)


State 336

  230 assignment_statement: variable_access $@53 assign . $@54 expression

    $default  reduce using rule 229 ($@54)

    $@54  go to state 365


State 337

  242 indexed_variable: array_variable '[' @55 . index_expression_list ']'

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access        go to state 271
    buffer_variable        go to state 241
    entire_variable        go to state 242
    variable_identifier    go to state 243
    component_variable     go to state 244
    indexed_variable       go to state 245
    array_variable         go to state 246
    field_designator       go to state 247
    record_variable        go to state 248
    index_expression_list  go to state 366
    expression             go to state 367
    simple_expression      go to state 273
    term                   go to state 274
    factor                 go to state 275


State 338

  244 field_designator: record_variable '.' IDENTIFIER .

    $default  reduce using rule 244 (field_designator)


State 339

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 . statement_sequence END ';'

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement_sequence  go to state 368
    statement           go to state 177
    optional_label      go to state 178
    label               go to state 179


State 340

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 . statement_sequence END ';'

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement_sequence  go to state 369
    statement           go to state 177
    optional_label      go to state 178
    label               go to state 179


State 341

  124 variant_list: variant_list ';' @22 variant .

    $default  reduce using rule 124 (variant_list)


State 342

  207 case_constant_list: case_constant_list ',' case_constant .

    $default  reduce using rule 207 (case_constant_list)


State 343

  128 variant: $@23 case_constant_list ':' '(' . $@24 variant_field_list ')'

    $default  reduce using rule 127 ($@24)

    $@24  go to state 370


State 344

  290 factor: NOT $@66 factor .

    $default  reduce using rule 290 (factor)


State 345

  286 factor: IDENTIFIER '(' $@64 . actual_parameter_list ')'

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access        go to state 271
    buffer_variable        go to state 241
    entire_variable        go to state 242
    variable_identifier    go to state 243
    component_variable     go to state 244
    indexed_variable       go to state 245
    array_variable         go to state 246
    field_designator       go to state 247
    record_variable        go to state 248
    expression             go to state 362
    simple_expression      go to state 273
    term                   go to state 274
    factor                 go to state 275
    actual_parameter_list  go to state 371
    actual_parameter       go to state 364


State 346

  251 expression: expression . relational_operator @57 simple_expression
  288 factor: '(' $@65 expression . ')'

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    ')'  shift, and go to state 372
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    relational_operator  go to state 310


State 347

  261 simple_expression: '-' $@58 term .
  271 term: term . '/' $@61 factor
  273     | term . multiplying_operator @62 factor
  275     | term . AND $@63 factor

    AND  shift, and go to state 315
    DIV  shift, and go to state 316
    MOD  shift, and go to state 317
    '/'  shift, and go to state 318
    '*'  shift, and go to state 319

    $default  reduce using rule 261 (simple_expression)

    multiplying_operator  go to state 320


State 348

  198 case_statement: CASE $@42 case_index OF $@43 . case_list_element_sequence optional_semicolon END

    OTHERS  shift, and go to state 253

    $default  reduce using rule 208 ($@45)

    case_list_element_sequence  go to state 373
    case_list_element           go to state 374
    case_constant_list          go to state 375
    case_constant               go to state 255
    $@45                        go to state 256


State 349

  251 expression: expression relational_operator @57 . simple_expression

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    simple_expression    go to state 376
    term                 go to state 274
    factor               go to state 275


State 350

  266 simple_expression: simple_expression OR $@60 . term

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    term                 go to state 377
    factor               go to state 275


State 351

  264 simple_expression: simple_expression adding_operator @59 . term

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    term                 go to state 378
    factor               go to state 275


State 352

  275 term: term AND $@63 . factor

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    factor               go to state 379


State 353

  271 term: term '/' $@61 . factor

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    factor               go to state 380


State 354

  273 term: term multiplying_operator @62 . factor

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    factor               go to state 381


State 355

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value . to_or_downto $@51 final_value DO $@52 statement

    DOWNTO  shift, and go to state 382
    TO      shift, and go to state 383

    to_or_downto  go to state 384


State 356

  224 initial_value: expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 224 (initial_value)

    relational_operator  go to state 310


State 357

  192 if_statement: IF $@39 boolean_expression THEN $@40 . statement else_part

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement       go to state 385
    optional_label  go to state 178
    label           go to state 179


State 358

  219 repeat_statement: REPEAT $@48 statement_sequence UNTIL $@49 . expression

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 386
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 359

  216 while_statement: WHILE $@46 expression DO $@47 . statement

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement       go to state 387
    optional_label  go to state 178
    label           go to state 179


State 360

  167 read_parameter_list: '(' $@33 . read_parameter_list1 ')'

    IDENTIFIER  shift, and go to state 388

    read_parameter_list1  go to state 389
    read_parameter        go to state 390
    variable_access       go to state 391
    buffer_variable       go to state 241
    entire_variable       go to state 242
    variable_identifier   go to state 243
    component_variable    go to state 244
    indexed_variable      go to state 245
    array_variable        go to state 246
    field_designator      go to state 247
    record_variable       go to state 248


State 361

  175 write_parameter_list: '(' $@35 . write_parameter_list1 ')'

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    write_parameter_list1  go to state 392
    write_expression       go to state 393
    variable_access        go to state 271
    buffer_variable        go to state 241
    entire_variable        go to state 242
    variable_identifier    go to state 243
    component_variable     go to state 244
    indexed_variable       go to state 245
    array_variable         go to state 246
    field_designator       go to state 247
    record_variable        go to state 248
    expression             go to state 394
    simple_expression      go to state 273
    term                   go to state 274
    factor                 go to state 275


State 362

  251 expression: expression . relational_operator @57 simple_expression
  296 actual_parameter: expression .

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 296 (actual_parameter)

    relational_operator  go to state 310


State 363

  292 optional_actual_parameter_list: '(' actual_parameter_list . ')'
  295 actual_parameter_list: actual_parameter_list . ',' $@67 actual_parameter

    ')'  shift, and go to state 395
    ','  shift, and go to state 396


State 364

  293 actual_parameter_list: actual_parameter .

    $default  reduce using rule 293 (actual_parameter_list)


State 365

  230 assignment_statement: variable_access $@53 assign $@54 . expression

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 397
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 366

  242 indexed_variable: array_variable '[' @55 index_expression_list . ']'
  248 index_expression_list: index_expression_list . ',' $@56 expression

    ','  shift, and go to state 398
    ']'  shift, and go to state 399


State 367

  246 index_expression_list: expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 246 (index_expression_list)

    relational_operator  go to state 310


State 368

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence . END ';'
  143 statement_sequence: statement_sequence . ';' statement

    END  shift, and go to state 400
    ';'  shift, and go to state 197


State 369

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence . END ';'
  143 statement_sequence: statement_sequence . ';' statement

    END  shift, and go to state 401
    ';'  shift, and go to state 197


State 370

  128 variant: $@23 case_constant_list ':' '(' $@24 . variant_field_list ')'

    IDENTIFIER  shift, and go to state 114

    $default  reduce using rule 112 (record_section)

    fixed_part             go to state 402
    record_section_list    go to state 117
    record_section         go to state 118
    field_declarator_list  go to state 119
    field_declarator       go to state 120
    variant_field_list     go to state 403


State 371

  286 factor: IDENTIFIER '(' $@64 actual_parameter_list . ')'
  295 actual_parameter_list: actual_parameter_list . ',' $@67 actual_parameter

    ')'  shift, and go to state 404
    ','  shift, and go to state 396


State 372

  288 factor: '(' $@65 expression ')' .

    $default  reduce using rule 288 (factor)


State 373

  198 case_statement: CASE $@42 case_index OF $@43 case_list_element_sequence . optional_semicolon END
  203 case_list_element_sequence: case_list_element_sequence . ';' case_list_element

    ';'  shift, and go to state 405

    $default  reduce using rule 199 (optional_semicolon)

    optional_semicolon  go to state 406


State 374

  202 case_list_element_sequence: case_list_element .

    $default  reduce using rule 202 (case_list_element_sequence)


State 375

  205 case_list_element: case_constant_list . ':' $@44 statement
  207 case_constant_list: case_constant_list . ',' case_constant

    ','  shift, and go to state 294
    ':'  shift, and go to state 407


State 376

  251 expression: expression relational_operator @57 simple_expression .
  264 simple_expression: simple_expression . adding_operator @59 term
  266                  | simple_expression . OR $@60 term

    OR   shift, and go to state 311
    '+'  shift, and go to state 312
    '-'  shift, and go to state 313

    $default  reduce using rule 251 (expression)

    adding_operator  go to state 314


State 377

  266 simple_expression: simple_expression OR $@60 term .
  271 term: term . '/' $@61 factor
  273     | term . multiplying_operator @62 factor
  275     | term . AND $@63 factor

    AND  shift, and go to state 315
    DIV  shift, and go to state 316
    MOD  shift, and go to state 317
    '/'  shift, and go to state 318
    '*'  shift, and go to state 319

    $default  reduce using rule 266 (simple_expression)

    multiplying_operator  go to state 320


State 378

  264 simple_expression: simple_expression adding_operator @59 term .
  271 term: term . '/' $@61 factor
  273     | term . multiplying_operator @62 factor
  275     | term . AND $@63 factor

    AND  shift, and go to state 315
    DIV  shift, and go to state 316
    MOD  shift, and go to state 317
    '/'  shift, and go to state 318
    '*'  shift, and go to state 319

    $default  reduce using rule 264 (simple_expression)

    multiplying_operator  go to state 320


State 379

  275 term: term AND $@63 factor .

    $default  reduce using rule 275 (term)


State 380

  271 term: term '/' $@61 factor .

    $default  reduce using rule 271 (term)


State 381

  273 term: term multiplying_operator @62 factor .

    $default  reduce using rule 273 (term)


State 382

  227 to_or_downto: DOWNTO .

    $default  reduce using rule 227 (to_or_downto)


State 383

  226 to_or_downto: TO .

    $default  reduce using rule 226 (to_or_downto)


State 384

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value to_or_downto . $@51 final_value DO $@52 statement

    $default  reduce using rule 221 ($@51)

    $@51  go to state 408


State 385

  192 if_statement: IF $@39 boolean_expression THEN $@40 statement . else_part

    ELSE  shift, and go to state 409

    ELSE      [reduce using rule 193 (else_part)]
    $default  reduce using rule 193 (else_part)

    else_part  go to state 410


State 386

  219 repeat_statement: REPEAT $@48 statement_sequence UNTIL $@49 expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 219 (repeat_statement)

    relational_operator  go to state 310


State 387

  216 while_statement: WHILE $@46 expression DO $@47 statement .

    $default  reduce using rule 216 (while_statement)


State 388

  238 variable_identifier: IDENTIFIER .

    $default  reduce using rule 238 (variable_identifier)


State 389

  167 read_parameter_list: '(' $@33 read_parameter_list1 . ')'
  170 read_parameter_list1: read_parameter_list1 . ',' $@34 read_parameter

    ')'  shift, and go to state 411
    ','  shift, and go to state 412


State 390

  168 read_parameter_list1: read_parameter .

    $default  reduce using rule 168 (read_parameter_list1)


State 391

  171 read_parameter: variable_access .
  236 buffer_variable: variable_access . '^'
  243 array_variable: variable_access .
  245 record_variable: variable_access .

    '^'  shift, and go to state 287

    '.'       reduce using rule 245 (record_variable)
    '['       reduce using rule 243 (array_variable)
    $default  reduce using rule 171 (read_parameter)


State 392

  175 write_parameter_list: '(' $@35 write_parameter_list1 . ')'
  178 write_parameter_list1: write_parameter_list1 . ',' $@36 write_expression

    ')'  shift, and go to state 413
    ','  shift, and go to state 414


State 393

  176 write_parameter_list1: write_expression .

    $default  reduce using rule 176 (write_parameter_list1)


State 394

  179 write_expression: expression .
  181                 | expression . ':' $@37 output_width
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    ':'  shift, and go to state 415
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 179 (write_expression)

    relational_operator  go to state 310


State 395

  292 optional_actual_parameter_list: '(' actual_parameter_list ')' .

    $default  reduce using rule 292 (optional_actual_parameter_list)


State 396

  295 actual_parameter_list: actual_parameter_list ',' . $@67 actual_parameter

    $default  reduce using rule 294 ($@67)

    $@67  go to state 416


State 397

  230 assignment_statement: variable_access $@53 assign $@54 expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 230 (assignment_statement)

    relational_operator  go to state 310


State 398

  248 index_expression_list: index_expression_list ',' . $@56 expression

    $default  reduce using rule 247 ($@56)

    $@56  go to state 417


State 399

  242 indexed_variable: array_variable '[' @55 index_expression_list ']' .

    $default  reduce using rule 242 (indexed_variable)


State 400

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END . ';'

    ';'  shift, and go to state 418


State 401

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END . ';'

    ';'  shift, and go to state 419


State 402

  129 variant_field_list: fixed_part . variant_part

    CASE  shift, and go to state 147

    $default  reduce using rule 118 (variant_part)

    variant_part  go to state 420


State 403

  128 variant: $@23 case_constant_list ':' '(' $@24 variant_field_list . ')'

    ')'  shift, and go to state 421


State 404

  286 factor: IDENTIFIER '(' $@64 actual_parameter_list ')' .

    $default  reduce using rule 286 (factor)


State 405

  200 optional_semicolon: ';' .
  203 case_list_element_sequence: case_list_element_sequence ';' . case_list_element

    OTHERS  shift, and go to state 253

    END       reduce using rule 200 (optional_semicolon)
    $default  reduce using rule 208 ($@45)

    case_list_element   go to state 422
    case_constant_list  go to state 375
    case_constant       go to state 255
    $@45                go to state 256


State 406

  198 case_statement: CASE $@42 case_index OF $@43 case_list_element_sequence optional_semicolon . END

    END  shift, and go to state 423


State 407

  205 case_list_element: case_constant_list ':' . $@44 statement

    $default  reduce using rule 204 ($@44)

    $@44  go to state 424


State 408

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value to_or_downto $@51 . final_value DO $@52 statement

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    final_value          go to state 425
    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 426
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 409

  195 else_part: ELSE . $@41 statement

    $default  reduce using rule 194 ($@41)

    $@41  go to state 427


State 410

  192 if_statement: IF $@39 boolean_expression THEN $@40 statement else_part .

    $default  reduce using rule 192 (if_statement)


State 411

  167 read_parameter_list: '(' $@33 read_parameter_list1 ')' .

    $default  reduce using rule 167 (read_parameter_list)


State 412

  170 read_parameter_list1: read_parameter_list1 ',' . $@34 read_parameter

    $default  reduce using rule 169 ($@34)

    $@34  go to state 428


State 413

  175 write_parameter_list: '(' $@35 write_parameter_list1 ')' .

    $default  reduce using rule 175 (write_parameter_list)


State 414

  178 write_parameter_list1: write_parameter_list1 ',' . $@36 write_expression

    $default  reduce using rule 177 ($@36)

    $@36  go to state 429


State 415

  181 write_expression: expression ':' . $@37 output_width

    $default  reduce using rule 180 ($@37)

    $@37  go to state 430


State 416

  295 actual_parameter_list: actual_parameter_list ',' $@67 . actual_parameter

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 362
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275
    actual_parameter     go to state 431


State 417

  248 index_expression_list: index_expression_list ',' $@56 . expression

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 432
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 418

   24 function_declaration: function_head ';' $@7 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@8 statement_sequence END ';' .

    $default  reduce using rule 24 (function_declaration)


State 419

   33 procedure_declaration: procedure_head ';' $@10 label_declaration_part constant_definition_part type_definition_part variable_declaration_part BEGIn $@11 statement_sequence END ';' .

    $default  reduce using rule 33 (procedure_declaration)


State 420

  129 variant_field_list: fixed_part variant_part .

    $default  reduce using rule 129 (variant_field_list)


State 421

  128 variant: $@23 case_constant_list ':' '(' $@24 variant_field_list ')' .

    $default  reduce using rule 128 (variant)


State 422

  203 case_list_element_sequence: case_list_element_sequence ';' case_list_element .

    $default  reduce using rule 203 (case_list_element_sequence)


State 423

  198 case_statement: CASE $@42 case_index OF $@43 case_list_element_sequence optional_semicolon END .

    $default  reduce using rule 198 (case_statement)


State 424

  205 case_list_element: case_constant_list ':' $@44 . statement

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement       go to state 433
    optional_label  go to state 178
    label           go to state 179


State 425

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value to_or_downto $@51 final_value . DO $@52 statement

    DO  shift, and go to state 434


State 426

  225 final_value: expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 225 (final_value)

    relational_operator  go to state 310


State 427

  195 else_part: ELSE $@41 . statement

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement       go to state 435
    optional_label  go to state 178
    label           go to state 179


State 428

  170 read_parameter_list1: read_parameter_list1 ',' $@34 . read_parameter

    IDENTIFIER  shift, and go to state 388

    read_parameter       go to state 436
    variable_access      go to state 391
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248


State 429

  178 write_parameter_list1: write_parameter_list1 ',' $@36 . write_expression

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    write_expression     go to state 437
    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 394
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 430

  181 write_expression: expression ':' $@37 . output_width

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    output_width         go to state 438
    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 439
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 431

  295 actual_parameter_list: actual_parameter_list ',' $@67 actual_parameter .

    $default  reduce using rule 295 (actual_parameter_list)


State 432

  248 index_expression_list: index_expression_list ',' $@56 expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 248 (index_expression_list)

    relational_operator  go to state 310


State 433

  205 case_list_element: case_constant_list ':' $@44 statement .

    $default  reduce using rule 205 (case_list_element)


State 434

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value to_or_downto $@51 final_value DO . $@52 statement

    $default  reduce using rule 222 ($@52)

    $@52  go to state 440


State 435

  195 else_part: ELSE $@41 statement .

    $default  reduce using rule 195 (else_part)


State 436

  170 read_parameter_list1: read_parameter_list1 ',' $@34 read_parameter .

    $default  reduce using rule 170 (read_parameter_list1)


State 437

  178 write_parameter_list1: write_parameter_list1 ',' $@36 write_expression .

    $default  reduce using rule 178 (write_parameter_list1)


State 438

  181 write_expression: expression ':' $@37 output_width .

    $default  reduce using rule 181 (write_expression)


State 439

  182 output_width: expression .
  184             | expression . ':' $@38 expression
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    ':'  shift, and go to state 441
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 182 (output_width)

    relational_operator  go to state 310


State 440

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value to_or_downto $@51 final_value DO $@52 . statement

    UNSIGNED_NUMBER  shift, and go to state 175

    $default  reduce using rule 147 (optional_label)

    statement       go to state 442
    optional_label  go to state 178
    label           go to state 179


State 441

  184 output_width: expression ':' . $@38 expression

    $default  reduce using rule 183 ($@38)

    $@38  go to state 443


State 442

  223 for_statement: FOR IDENTIFIER ASSIGN $@50 initial_value to_or_downto $@51 final_value DO $@52 statement .

    $default  reduce using rule 223 (for_statement)


State 443

  184 output_width: expression ':' $@38 . expression

    NOT                 shift, and go to state 260
    CHARACTER_STRING    shift, and go to state 261
    CHARACTER_CONSTANT  shift, and go to state 262
    UNSIGNED_NUMBER     shift, and go to state 263
    REAL_CONSTANT       shift, and go to state 264
    LONG_REAL_CONSTANT  shift, and go to state 265
    IDENTIFIER          shift, and go to state 266
    '('                 shift, and go to state 267
    '+'                 shift, and go to state 268
    '-'                 shift, and go to state 269

    variable_access      go to state 271
    buffer_variable      go to state 241
    entire_variable      go to state 242
    variable_identifier  go to state 243
    component_variable   go to state 244
    indexed_variable     go to state 245
    array_variable       go to state 246
    field_designator     go to state 247
    record_variable      go to state 248
    expression           go to state 444
    simple_expression    go to state 273
    term                 go to state 274
    factor               go to state 275


State 444

  184 output_width: expression ':' $@38 expression .
  251 expression: expression . relational_operator @57 simple_expression

    NEQ  shift, and go to state 304
    GEQ  shift, and go to state 305
    LEQ  shift, and go to state 306
    '='  shift, and go to state 307
    '<'  shift, and go to state 308
    '>'  shift, and go to state 309

    $default  reduce using rule 184 (output_width)

    relational_operator  go to state 310
